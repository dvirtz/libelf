/* config.h.in.  Generated automatically from configure.in by autoheader.  */

/* Define to empty if the keyword does not work.  */
#cmakedefine const 

/* Define if you have a working `mmap' system call.  */
#cmakedefine HAVE_MMAP 1

/* Define to `long' if <sys/types.h> doesn't define.  */
#cmakedefine off_t @off_t@

/* Define to `unsigned' if <sys/types.h> doesn't define.  */
#cmakedefine size_t @size_t@

/* Define if you have the ANSI C header files.  */
#cmakedefine STDC_HEADERS 1

/* Define if you want to include extra debugging code */
#cmakedefine ENABLE_DEBUG 1

/* Define if you want to support extended ELF formats */
#cmakedefine ENABLE_EXTENDED_FORMAT 1

/* Define if you want ELF format sanity checks by default */
#cmakedefine ENABLE_SANITY_CHECKS 1

/* Define if memmove() does not copy overlapping arrays correctly */
#cmakedefine HAVE_BROKEN_MEMMOVE 1

/* Define if you have the catgets function. */
#cmakedefine HAVE_CATGETS 1

/* Define if you have the dgettext function. */
#cmakedefine HAVE_DGETTEXT 1

/* Define if you have the memset function.  */
#cmakedefine HAVE_MEMSET 1

/* Define if struct nlist is declared in <elf.h> or <sys/elf.h> */
#cmakedefine HAVE_STRUCT_NLIST_DECLARATION 1

/* Define if Elf32_Dyn is declared in <link.h> */
#cmakedefine __LIBELF_NEED_LINK_H 1

/* Define if Elf32_Dyn is declared in <sys/link.h> */
#cmakedefine __LIBELF_NEED_SYS_LINK_H 1

/* Define to `<elf.h>' or `<sys/elf.h>' if one of them is present */
#cmakedefine __LIBELF_HEADER_ELF_H @__LIBELF_HEADER_ELF_H@

/* Define if you want 64-bit support (and your system supports it) */
#cmakedefine __LIBELF64 1

/* Define if you want 64-bit support, and are running IRIX */
#cmakedefine __LIBELF64_IRIX 1

/* Define if you want 64-bit support, and are running Linux */
#cmakedefine __LIBELF64_LINUX 1

/* Define if you want symbol versioning (and your system supports it) */
#cmakedefine __LIBELF_SYMBOL_VERSIONS 1

/* Define if symbol versioning uses Sun section type (SHT_SUNW_*) */
#cmakedefine __LIBELF_SUN_SYMBOL_VERSIONS 1

/* Define if symbol versioning uses GNU section types (SHT_GNU_*) */
#cmakedefine __LIBELF_GNU_SYMBOL_VERSIONS 1

/* Define to a 64-bit signed integer type if one exists */
#cmakedefine __libelf_i64_t @__libelf_i64_t@

/* Define to a 64-bit unsigned integer type if one exists */
#cmakedefine __libelf_u64_t @__libelf_u64_t@

/* Define to a 32-bit signed integer type if one exists */
#cmakedefine __libelf_i32_t @__libelf_i32_t@

/* Define to a 32-bit unsigned integer type if one exists */
#cmakedefine __libelf_u32_t @__libelf_u32_t@

/* Define to a 16-bit signed integer type if one exists */
#cmakedefine __libelf_i16_t @__libelf_i16_t@

/* Define to a 16-bit unsigned integer type if one exists */
#cmakedefine __libelf_u16_t @__libelf_u16_t@

/* The number of bytes in a __int64.  */
#cmakedefine SIZEOF___INT64 @SIZEOF___INT64@

/* The number of bytes in a int.  */
#cmakedefine SIZEOF_INT @SIZEOF_INT@

/* The number of bytes in a long.  */
#cmakedefine SIZEOF_LONG @SIZEOF_LONG@

/* The number of bytes in a long long.  */
#cmakedefine SIZEOF_LONG_LONG @SIZEOF_LONG_LONG@

/* The number of bytes in a short.  */
#cmakedefine SIZEOF_SHORT @SIZEOF_SHORT@

/* Define if you have the ftruncate function.  */
#cmakedefine HAVE_FTRUNCATE 1

/* Define if you have the getpagesize function.  */
#cmakedefine HAVE_GETPAGESIZE 1

/* Define if you have the memcmp function.  */
#cmakedefine HAVE_MEMCMP 1

/* Define if you have the memcpy function.  */
#cmakedefine HAVE_MEMCPY 1

/* Define if you have the memmove function.  */
#cmakedefine HAVE_MEMMOVE 1

/* Define if you have the memset function.  */
#cmakedefine HAVE_MEMSET 1

/* Define if you have the <ar.h> header file.  */
#cmakedefine HAVE_AR_H 1

/* Define if you have the <elf.h> header file.  */
#cmakedefine HAVE_ELF_H 1

/* Define if you have the <fcntl.h> header file.  */
#cmakedefine HAVE_FCNTL_H 1

/* Define if you have the <gelf.h> header file.  */
#cmakedefine HAVE_GELF_H 1

/* Define if you have the <libelf.h> header file.  */
#cmakedefine HAVE_LIBELF_H 1

/* Define if you have the <link.h> header file.  */
#cmakedefine HAVE_LINK_H 1

/* Define if you have the <nlist.h> header file.  */
#cmakedefine HAVE_NLIST_H 1

/* Define if you have the <stdint.h> header file.  */
#cmakedefine HAVE_STDINT_H 1

/* Define if you have the <sys/elf.h> header file.  */
#cmakedefine HAVE_SYS_ELF_H 1

/* Define if you have the <sys/link.h> header file.  */
#cmakedefine HAVE_SYS_LINK_H 1

/* Define if you have the <unistd.h> header file.  */
#cmakedefine HAVE_UNISTD_H 1
